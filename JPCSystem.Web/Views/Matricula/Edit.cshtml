@model JPCSystem.Web.Models.MatriculaModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-2">
                <h4>Matricula @Model.anio</h4>
            </div>
            <div class="col-md-6" id="idMensaje">

            </div>
            <div class="col-md-4">
                <h4>Fecha: @Model.FechaDateTime.ToString("D")</h4>
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <hr />

        @Html.HiddenFor(model => model.AlumnoId)
        @Html.HiddenFor(model => model.ApoderadoId)
        @Html.HiddenFor(model => model.FechaDateTime)
        @Html.HiddenFor(model => model.AnioAcademicoId)
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-lg-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-lg-12" readonly>
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-lg-4">Tipo Documento</label>
                                    <div class="col-xs-12 col-sm-8 col-lg-8">
                                        @Html.DropDownListFor(model => model.tipoDocAlumnoId, new SelectList(ViewBag.documento, "Id", "NomDocumento"), "Selecciona Documento", new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessage("Documento_Alum_Id", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-lg-4">N° Documento</label>
                                    <div class="col-xs-12 col-sm-8 col-lg-8">
                                        @*<input class="form-control" type="text" id="nroDocAlumno" name="nroDocAlumno" value="" />*@
                                        @Html.EditorFor(model => model.nroDocAlumno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-lg-4">Alumno</label>
                                    <div class="col-xs-12 col-sm-8 col-lg-8">
                                        @*<input id="NombreAlumno" type="text" name="NombreAlumno" class="form-control" value="" readonly />*@
                                        @Html.EditorFor(model => model.NombreAlumno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                                        @Html.ValidationMessageFor(model => Model.AlumnoId, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-lg-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-lg-12">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-lg-4">Tipo Documento</label>
                                    <div class="col-xs-12 col-sm-8 col-lg-8">
                                        @Html.DropDownListFor(model => model.tipoDocApoderadoId, new SelectList(ViewBag.documento, "Id", "NomDocumento"), "Selecciona Documento", new { @class = "form-control" })
                                        @Html.ValidationMessage("Documento_Apod_Id", "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-lg-4">N° Documento</label>
                                    <div class="col-xs-12 col-sm-8 col-lg-8">
                                        @*<input class="form-control" type="text" id="nroDocApoderado" name="nroDocApoderado" value="" />*@
                                        @Html.EditorFor(model => model.nroDocApoderado, new { htmlAttributes = new { @class = "form-control" }})
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-4 col-md-4 col-lg-4">Apoderado</label>
                                    <div class="col-xs-11 col-sm-6 col-md-6 col-lg-6">
                                        @*<input readonly="readonly" id="Nombreapoderado" type="text" name="Nombreapoderado" class="form-control " value="" />*@
                                        @Html.EditorFor(model => model.Nombreapoderado, new { htmlAttributes = new { @class = "form-control"}})
                                        @Html.ValidationMessageFor(model => Model.ApoderadoId, "", new { @class = "text-danger" })
                                    </div>
                                    <button type="button" id="btnNuevoApoderado" class="btn btn-success"><span class="fa fa-plus-square"></span></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-3 col-lg-3">
                        <div class="form-group">
                            @Html.Label("Nivel", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-xs-12 col-sm-10 col-lg-10">
                                @Html.DropDownListFor(model => model.niveId, (SelectList)ViewBag.niveles, "Seleccione...", new { @class = "form-control" })
                                @Html.ValidationMessage("niveId", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-3 col-lg-3">
                        <div class="form-group">
                            @Html.Label("Grado", htmlAttributes: new { @class = "col-xs-12 col-sm-3 col-lg-3" })
                            <div class="col-xs-12 col-sm-10 col-lg-10">
                                @Html.DropDownListFor(model => model.gradoId, (SelectList)ViewBag.grados, null, new { @class = "form-control" })
                                @Html.ValidationMessage("gradoId", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-3 col-lg-3">
                        <div class="form-group">
                            @Html.Label("Seccion", htmlAttributes: new { @class = "col-xs-12 col-sm-3 col-lg-3" })
                            <div class="col-xs-12 col-sm-10 col-lg-10">
                                @Html.DropDownListFor(model => model.seccinId, (SelectList)ViewBag.seccion, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.seccinId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-3 col-lg-3">
                        <div class="form-group">
                            <div class="col-xs-7 col-sm-10 col-lg-7">
                                @Html.Label("Vacantes", htmlAttributes: new { @class = "col-xs-12 col-sm-9 col-lg-9" })
                            </div>
                            <a><span id="vacantes" class="badge">@Model.vacantes</span></a>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-7 col-sm-10 col-lg-7">
                                @Html.Label("Matriculados", htmlAttributes: new { @class = "col-xs-12 col-sm-9 col-lg-9" })
                            </div>
                            <a><span id="matriculados" class="badge">@Model.matriculados</span></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group" style="text-align: right">
            <div class="col-xs-12 col-sm-12 col-lg-12">
                <button type="submit" class="btn btn-primary"><i class="fa fa-check"></i> Matricular</button>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">

        $("#btnGuardaAlumnoMat").click(function () {
            var formAlumno = $("#formAlumno").serialize();
            $.post("/Matricula/CreateAlumno/", formAlumno)
                .done(function (data) {
                    console.log(data);
                    if (data.data === "ok") {
                        $("#myModalAlumnoMatricula").modal('hide');
                        toastr.success('Alumno agregado Correctamente');
                    }
                    else {
                        $("#myModalAlumnoMatricula").find('.modal-body').html(data);
                    }
                });
        });

        $("#btnGuardaApoderadoMat").click(function () {
            var matriculaApoderadoId = $("#matriculaApoderadoId").serialize();
            $.post("/Matricula/CreateApoderdo/", matriculaApoderadoId)
                .done(function (data) {
                    console.log(data);
                    if (data.data === "ok") {
                        $("#myModalApoderadoMatricula").modal('hide');
                        toastr.success('Apoderado agregado Correctamente');
                    }
                    else {
                        $("#myModalApoderadoMatricula").find('.modal-body').html(data);
                    }
                });
        });

        var tipoDocAp;
        var tipoDocApId;
        $("#tipoDocApoderadoId").on("change",
            function () {
                tipoDocApId = document.getElementById('tipoDocApoderadoId');
                tipoDocAp = tipoDocApId.options[tipoDocApId.selectedIndex].text

            });

        $("#nroDocApoderado").on("keyup",
            function () {
                var apod = $(this).val();
                if ($("#nroDocApoderado").val().length === 8) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetBusca")',
                        dataType: 'json',
                        data: { NumDoc: apod, TipoDoc: tipoDocAp, estado: "Apoderado" },
                        success: function (data) {

                            $.each(data,
                                function (i, data) {
                                    console.log(data)
                                    $("#Nombreapoderado").val(data["NombreCompleto"]);
                                    var id = data["Id"];
                                    $("#ApoderadoId").val(id);
                                    $("#btnNuevoApoderado").addClass('hidden');
                                });
                        }
                    });
                } else {
                    $("#btnNuevoApoderado").removeClass('hidden');
                    //$("#btnNuevoAlumno").removeClass('hidden')
                    $("#ApoderadoId").val("");
                    $("#Nombreapoderado").val("");
                }
            });

        var tipoDoc;
        var tipoDocId;
        $("#tipoDocAlumnoId").on("change",
            function () {
                tipoDocId = document.getElementById('tipoDocAlumnoId');
                tipoDoc = tipoDocId.options[tipoDocId.selectedIndex].text

            });

        $("#nroDocAlumno").on("keyup",
            function () {
                var alum = $(this).val();
                if ($("#nroDocAlumno").val().length === 8) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetBusca")',
                        dataType: 'json',
                        data: { NumDoc: alum, TipoDoc: tipoDoc, estado: "Alumno" },
                        success: function (data) {
                            console.log(data);
                            if (data.data["msj"] === "false") {
                                cargaData(data);
                            } else {
                                if (data.data['msj'] === "Repite") {
                                    cargaData(data);
                                    $("#idMensaje")
                                        .html(
                                            "<div class='alert alert-danger' role='alert'><ul style='text-align: center' ><strong>" +
                                            data.data['msj'] +
                                            " en " +
                                            data.data['n'].NombreNivel +
                                            " " +
                                            data.data['g'].NombreGrado +
                                            " " +
                                            data.data['s'].NombreSeccion +
                                            "" +
                                            "</strong></ul><ul style='text-align: center'><strong>" +
                                            "Promedio Final = " +
                                            data.data["nota"] +
                                            "</strong></ul></div>");

                                    console.log(data.data["n"].Id);
                                    $("#niveId").html("<option value='" +
                                        data.data['n'].Id +
                                        "'>" +
                                        data.data['n'].NombreNivel +
                                        "</option>");
                                    $("#gradoId").html("<option value='" +
                                        data.data['g'].Id +
                                        "'>" +
                                        data.data['g'].NombreGrado +
                                        "</option>");
                                    $("#seccinId").html("<option value='" +
                                        data.data['s'].Id +
                                        "'>" +
                                        data.data['s'].NombreSeccion +
                                        "</option>");
                                    $("#matriculados").text(data.data["maxLength"]);
                                    $("#vacantes").text(data.data["vacantes"]);
                                }
                                if (data.data['msj'] === "Promovido") {
                                    cargaData(data);
                                    $("#idMensaje")
                                        .html(
                                            "<div class='alert alert-info' role='alert'><ul style='text-align: center'><strong>" +
                                            data.data['msj'] +
                                            " de " +
                                            data.data['n'].NombreNivel +
                                            " " +
                                            data.data['g'].NombreGrado +
                                            " " +
                                            data.data['s'].NombreSeccion +
                                            "</strong></ul><ul style='text-align: center'><strong>Promedio Final = " +
                                            data.data["nota"] +
                                            "</strong></ul></div>");
                                    $("#matriculados").text(data.data["maxLength"]);
                                    $("#vacantes").text(data.data["vacantes"]);
                                }
                            }

                        }
                    });
                } else {
                    $("#AlumnoId").val("");
                    $("#NombreAlumno").val("");
                }
            });

        function cargaData(data) {
            $("#NombreAlumno").val(data.alumno["NombreCompleto"]);
            var id = data.alumno["Id"];
            $("#AlumnoId").val(id);
            $("#btnNuevoAlumno").addClass('hidden');
        }

        $("#btnNuevoAlumno").on("click",
            function () {
                $("#myModalAlumnoMatricula").find(".modal-title").html("Agregar Nuevo Alumno");
                $("#myModalAlumnoMatricula").find('.modal-body').load("/Matricula/CreateAlumno");
                $("#myModalAlumnoMatricula").modal('show');
            });

        $("#btnNuevoApoderado").on("click",
            function () {
                $("#myModalApoderadoMatricula").find(".modal-title").html("Agregar Nuevo Apoderado");
                $("#myModalApoderadoMatricula").find('.modal-body').load("/Matricula/CreateApoderdo");
                $("#myModalApoderadoMatricula").modal('show');
            });


        $("#niveId").change(function () {
            $("#gradoId").empty();
            $("#gradoId").html("<option value='0'>Seleccione</option>");
            $("#seccinId").empty();
            $("#seccinId").html("<option value='0'>Seleccione</option>");
            var idNivel = $(this).val();
            $.post("/Matricula/GetNivel/?nivelId=" + idNivel)
                .done(function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#gradoId").append(
                            "<option value='" + data[i].Id + "'>" + data[i].NombreGrado + "</option>'"
                        );


                    }
                });
        });

        $("#gradoId").change(function () {
            var gradoId = $(this).val();
            $("#seccinId").empty();
            $("#seccinId").html("<option value='0'>Seleccione</option>");
            $.post("/Matricula/GetSeccion/?gradoId=" + gradoId)
                .done(function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#seccinId").append(
                            "<option value='" + data[i].Id + "'>" + data[i].NombreSeccion + "</option>'"
                        );


                    }
                });
        });

        $("#seccinId").change(function () {
            var seccionId = $(this).val();
            $.post("/Matricula/GetMaxLengthMatriculas/?seccionId=" + seccionId)
                .done(function (data) {
                    console.log(data);
                    if (data.rpt === "mayor") {
                        toastr.info("Capasidad de la sección alcanzada.");
                    }
                    $("#matriculados").text(data.rpt);
                    $("#vacantes").text(data.vacantes);
                });
        });

    </script>
}
